{"version":3,"sources":["../../models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","module","exports"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,YAAYF,QAAQ,WAAR,CAAlB;;AAEA,MAAMG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,MAAMC,SAASR,QAAQ,qBAAR,EAA+BK,GAA/B,CAAf;;AAEA,MAAMI,KAAK,EAAX;;AAEA,IAAIC,SAAJ;AACA,IAAIF,OAAOG,gBAAX,EAA6B;AAC3BD,cAAY,IAAIR,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,EAAoDH,MAApD,CAAZ;AACD,CAFD,MAEO;AACLE,cAAY,IAAIR,SAAJ,CAAcM,OAAOI,QAArB,EAA+BJ,OAAOK,QAAtC,EAAgDL,OAAOM,QAAvD,EAAiEN,MAAjE,CAAZ;AACD;;AAEDT,GACGgB,WADH,CACeC,SADf,EAEGC,MAFH,CAEWC,IAAD,IAAWA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAF5F,EAGGC,OAHH,CAGYH,IAAD,IAAU;AACjB,QAAMI,QAAQZ,UAAUa,MAAV,CAAiBtB,KAAKuB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,KAAGa,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AAQAI,OAAOC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAyBO,SAAD,IAAe;AACrC,MAAInB,GAAGmB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BpB,OAAGmB,SAAH,EAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGP,SAAH,GAAeA,SAAf;;AAEA4B,OAAOC,OAAP,GAAiBtB,EAAjB","file":"index.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('../config/config.js')[env];\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter((file) => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}